{
  "openapi": "3.0.0",
  "info": {
    "title": "REST API POF",
    "version": "1.0.0",
    "description": "Planty of Food (POF) API Documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Product",
      "description": "Access to POF products"
    },
    {
      "name": "Order",
      "description": "Access to POF orders"
    }
  ],
  "paths": {
    "/api/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Returns all users",
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Create a new user with the provided data",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userShema"
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update a user",
        "description": "Update a user with the provided data",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUserShema"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "description": "Delete a user with the provided data",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/product/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products",
        "description": "Returns all products",
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product",
        "description": "Create a new product with the provided data",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productShema"
              }
            }
          }
        }
      }
    },
    "/api/product/{productId}": {
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Update a product",
        "description": "Update a product with the provided data",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productShema"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product",
        "description": "Delete a product with the provided data",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/order/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get all orders",
        "description": "Returns all orders",
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create a new order",
        "description": "Create a new order with the provided data",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderSchema"
              }
            }
          }
        }
      }
    },
    "/api/order/{orderId}": {
      "patch": {
        "tags": [
          "Order"
        ],
        "summary": "Update an order",
        "description": "Update an order with the provided data",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderSchema"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete a orders",
        "description": "Delete a order with the provided data",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "userShema": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Alexander"
          },
          "lastName": {
            "type": "string",
            "example": "Jones"
          },
          "email": {
            "type": "string",
            "example": "Alexander@gmail.com"
          }
        }
      },
      "updateUserShema": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Lucas"
          },
          "lastName": {
            "type": "string",
            "example": "Jones"
          },
          "email": {
            "type": "string",
            "example": "Lucas@gmail.com"
          }
        }
      },
      "productShema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "apple"
          }
        }
      },
      "orderSchema": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "example": [
              "product1Id",
              "product2Id",
              "product3Id"
            ],
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "example": [
              "user1Id",
              "user2Id",
              "user3Id"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}